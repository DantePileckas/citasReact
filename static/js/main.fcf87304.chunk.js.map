{"version":3,"sources":["componentes/Header.js","componentes/AgregarCitas.js","componentes/Cita.js","componentes/ListaCitas.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","titulo","AgregarCita","nombreMascotaRef","React","createRef","propietarioRef","fechaRef","horaRef","simtomasRef","state","error","crearNuevaCita","e","preventDefault","mascota","current","value","propietario","fecha","hora","sintomas","setState","nuevaCita","id","uuid","crearCita","currentTarget","reset","existeError","this","onSubmit","ref","type","placeholder","Component","propType","PropTypes","func","isRequired","Cita","eliminarCita","borrarCita","info","onClick","ListasCitas","citas","mensaje","Object","keys","length","map","cita","App","filter","citasLs","localStorage","getItem","JSON","parse","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcf87304.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = props =>{\r\n    return(\r\n        <header>\r\n            <h1 className=\"text-center\">{props.titulo}</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    titulo : PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport uuid from 'react-uuid';//Genero un id único ya que no estoy trabajando con Bases de datos\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AgregarCita extends Component {\r\n\r\n    //refs\r\n    nombreMascotaRef = React.createRef();\r\n    propietarioRef = React.createRef();\r\n    fechaRef = React.createRef();\r\n    horaRef = React.createRef();\r\n    simtomasRef = React.createRef();\r\n\r\n\r\n    state = {\r\n        error: false\r\n    } // Agrega el error cuando no hay campos rellenos\r\n\r\n    crearNuevaCita = e => {\r\n        e.preventDefault();\r\n\r\n        const mascota = this.nombreMascotaRef.current.value;\r\n        const propietario = this.propietarioRef.current.value;\r\n        const fecha = this.fechaRef.current.value;\r\n        const hora = this.horaRef.current.value;\r\n        const sintomas = this.simtomasRef.current.value;\r\n\r\n        if (mascota === '' || propietario === '' || fecha === '' || hora === '' || sintomas === '') {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        } else {\r\n            const nuevaCita = {\r\n                //mascota : mascota\r\n                id: uuid(), //Me genera un número único\r\n                mascota,\r\n                propietario,\r\n                fecha,\r\n                hora,\r\n                sintomas\r\n            }\r\n\r\n            //Se envia el objeto hacia el padre para actualizar el state\r\n            this.props.crearCita(nuevaCita);\r\n\r\n            //Reiniciar el formulario\r\n            e.currentTarget.reset();\r\n\r\n            //Elimine el error\r\n            this.setState({\r\n                error: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const existeError = this.state.error;\r\n\r\n        return (\r\n            <div className=\"card mt-5\">\r\n                <div className=\"card-body\">\r\n                    <h2 className=\"card-title text-center mb-5\">Agrega las Citas Aquí</h2>\r\n                    <form onSubmit={this.crearNuevaCita}>\r\n                        <div className=\"form-group row\">\r\n\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Nombre Mascota</label>\r\n                            <div className=\"col-sm-8 col-lg-10\">\r\n                                <input ref={this.nombreMascotaRef} type=\"text\" className=\"form-control\" placeholder=\"Nombre Mascota\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Nombre Dueño</label>\r\n                            <div className=\"col-sm-8 col-lg-10\">\r\n                                <input ref={this.propietarioRef} type=\"text\" className=\"form-control\" placeholder=\"Nombre Dueño de la Mascota\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Fecha</label>\r\n                            <div className=\"col-sm-8 col-lg-4  mb-4 mb-lg-0\">\r\n                                <input ref={this.fechaRef} type=\"date\" className=\"form-control\" />\r\n                            </div>\r\n\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Hora</label>\r\n                            <div className=\"col-sm-8 col-lg-4\">\r\n                                <input ref={this.horaRef} type=\"time\" className=\"form-control\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Sintomas</label>\r\n                            <div className=\"col-sm-8 col-lg-10\">\r\n                                <textarea ref={this.simtomasRef} className=\"form-control\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row justify-content-end\">\r\n                            <div className=\"col-sm-3\">\r\n                                <button type=\"submit\" className=\"btn btn-success w-100\">Agregar</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    {existeError ? <div className=\"alert alert-danger text-center\">Todos los campos son obligatorios</div> : ''}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAgregarCita.propType ={\r\n    crearCita : PropTypes.func.isRequired\r\n}\r\n\r\nexport default AgregarCita;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Cita extends Component{\r\n    \r\n    eliminarCita = () => {\r\n        this.props.borrarCita(this.props.info.id);\r\n    }\r\n\r\n    render(){\r\n        const {fecha,hora,mascota,propietario,sintomas,id} = this.props.info;\r\n        return(\r\n            <div className=\"media mt-3\">\r\n                <div className=\"media-body\">\r\n                    <h3 className=\"mt-0\">{mascota}</h3>\r\n                    <p className=\"card-text\"><span>Nombre del dueño:</span>{propietario}</p>\r\n                    <p className=\"card-text\"><span>Fecha:</span>{fecha}</p>\r\n                    <p className=\"card-text\"><span>Hora:</span>{hora}</p>\r\n                    <p className=\"card-text\"><span>Síntomas:</span></p>\r\n                    <p className=\"card-text\">{sintomas}</p>\r\n             \r\n                    <button onClick={this.eliminarCita} className=\"btn btn-danger\"> \r\n                    Borrar &times;\r\n                    </button>\r\n             \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCita.propTypes = {\r\n    info : PropTypes.shape({\r\n        fecha : PropTypes.string.isRequired,\r\n        hora : PropTypes.string.isRequired,\r\n        mascota : PropTypes.string.isRequired,\r\n        propietario : PropTypes.string.isRequired,\r\n        sintomas : PropTypes.string.isRequired,\r\n        id : PropTypes.string.isRequired,\r\n    }),\r\n    \r\n    borrarCita : PropTypes.func.isRequired\r\n}\r\n\r\nexport default Cita;","import React, { Component } from 'react';\r\nimport Cita from './Cita';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ListasCitas extends Component{\r\n    render(){\r\n        const citas = this.props.citas;\r\n\r\n        const mensaje = Object.keys(citas).length === 0 ? 'No hay citas' : 'Administra tus Citas Aquí';\r\n\r\n        return(\r\n            <div className=\"card mt-5\">\r\n                <div className=\"card-body\">\r\n                    <h2 className=\"card-title text-center\"> {mensaje} </h2>\r\n               \r\n                    <div className=\"lista-citas\">\r\n                    {Object.keys(this.props.citas).map(cita=>(\r\n                      <Cita \r\n                            key={cita}\r\n                            info={this.props.citas[cita]}\r\n                            borrarCita={this.props.borrarCita}\r\n                      />                                        \r\n                    ))}\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nListasCitas.propTypes = {\r\n    citas : PropTypes.array.isRequired,\r\n    borrarCita : PropTypes.func.isRequired\r\n}\r\n\r\nexport default ListasCitas;","import Header from './componentes/Header';\nimport AgregarCita from './componentes/AgregarCitas';\nimport { Component } from 'react';\nimport ListasCitas from './componentes/ListaCitas';\n\nclass App extends Component {\n  state ={\n    citas:[]\n  }\n\n  //Está listo\n  componentDidMount(){\n    const citasLs = localStorage.getItem('citas');\n    if(citasLs){\n      this.setState({\n        citas:JSON.parse(citasLs)\n      })\n    }\n  }\n\n //Cuando algo se cambie\n  componentDidUpdate(){\n    localStorage.setItem(\n      'citas',\n      JSON.stringify(this.state.citas)\n    )\n\n  }\n\n  crearCita = (nuevaCita) => { \n  const citas = [...this.state.citas, nuevaCita] //copia de mi arreglo\n\n  this.setState({\n   citas\n  });\n\n  }\n  \n  borrarCita = id => {\n    //Leer el state\n    const citasActuales = [...this.state.citas];\n    //Borrar el elemento del state\n    const citas = citasActuales.filter(cita => cita.id !== id); \n    //Actualizar el state\n    this.setState({\n      citas\n    })\n  }\n\n  render(){\n  return (\n    <div className=\"container\">\n     <Header\n     titulo={'Administrador de Pacientes de Veterinaria'}\n     />\n     <div className=\"row\">\n       <div className=\"col-md-6\">\n         <AgregarCita\n         crearCita={this.crearCita}\n         />\n       </div>\n       <div className=\"col-md-6\">\n         <ListasCitas\n         citas = {this.state.citas}\n         borrarCita={this.borrarCita}\n         />\n       </div>\n     </div>\n    </div>\n  );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}